# Write an R script for demonstrating the first problem in your list.
flights <- within(flights, birthMonth <- factor(month, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "NA"), ordered = TRUE))
ggplot(data = flights, aes(month)) +
geom_bar()
# Write an R script for demonstrating the first problem in your list.
flights <- within(flights, month <- factor(month, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "NA"), ordered = TRUE))
source('~/R/InClass/05-datatrans-lab-1.R', echo=TRUE)
source('~/R/InClass/05-datatrans-lab-1.R', echo=TRUE)
flights <- within(flights, origin <- factor(origin))
source('~/R/InClass/05-datatrans-lab-1.R', echo=TRUE)
flights <- within(flights, month <- factor(month, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "NA"), ordered = TRUE))
ggplot(data = flights) +
geom_bar(mapping = aes(x = month))
flights <- within(flights, origin <- factor(origin))
ggplot(data = flights) +
geom_bar(mapping = aes(x = origin))
ggplot(data = flights) +
geom_point(mapping = aes(x = distance, y = dep_delay, color = origin))
ggplot(data = flights) +
geom_point(mapping = aes(x = distance, y = arr_delay, color = dest))
ggplot(data = flights) +
geom_point(mapping = aes(x = distance, y = arr_delay, color = dest))
source('~/R/InClass/05-datatrans-lab-1.R', echo=TRUE)
ggplot(data = flights) +
geom_point(mapping = aes(x = distance, y = dep_delay, color = origin))
ggplot(data = flights) +
geom_point(mapping = aes(x = distance, y = dep_delay, color = origin))
ggplot(data = flights) +
geom_point(mapping = aes(x = distance, y = arr_delay, color = dest))
source('~/R/InClass/05-datatrans-lab-1.R', echo=TRUE)
ggplot(data = flights) +
geom_point(mapping = aes(x = distance, y = dep_delay, color = origin, na.rm = FALSE))
library(dplyr)
library(nycflights13)
library(tidyverse)
ggplot(data = flights) +
geom_bar(mapping = aes(x = origin))
flights <- within(flights, origin <- factor(origin))
ggplot(data = flights) +
geom_bar(mapping = aes(x = origin))
ggplot(data = flights) +
geom_boxplot(x = origin, y = dep_delay)
ggplot(data = flights) +
geom_boxplot(mapping = aes(x = origin, y = dep_delay))
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay)) +
geom_boxplot()
source('~/R/InClass/Castro_Abigail_Exploratory_Analysis_In_Class.R', echo=TRUE)
#flights <- within(flights, origin <- factor(origin))
ggplot(data = flights) +
geom_bar(mapping = aes(x = origin))
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay)) +
geom_boxplot()
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay>0)) +
geom_boxplot()
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay)) +
geom_boxplot()
flights[flights < 0] <- NA
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay)) +
geom_boxplot()
flights[dep_delay < 0] <- NA
source('~/R/InClass/Castro_Abigail_Exploratory_Analysis_In_Class.R', echo=TRUE)
ggplot(data = flights) +
geom_point(mapping = aes(x = distance, y = dep_delay, color = origin, na.rm = FALSE))
c
ggplot(data = flights) +
geom_point(mapping = aes(x = air_time, y = dep_delay, color = origin, na.rm = FALSE))
geom_point() +
ggplot(data = flights, mapping = aes(x = air_time, y = dep_delay, color = origin)) +
geom_point() +
geom_smooth()
ggplot(data = flights, aes(x = air_time, y = dep_delay, color = origin)) +
geom_point() +
geom_smooth()
ggplot(data = flights, aes(x = air_time, y = dep_delay, color = origin)) +
geom_point()
library(nycflights13)
ggplot(data = flights, aes(x = air_time, y = dep_delay)) +
geom_smooth()
view(flights)
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay)) +
geom_boxplot()
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay)) +
geom_boxplot()+
ylim=c(0,100) +
ggplot(data = flights, aes(x = air_time, y = dep_delay)) +
geom_smooth()
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay)) +
geom_boxplot() +
ylim=c(0,100) +
#flights[flights < 0] <- NA
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay, ylim=c(0,100))) +
geom_boxplot()
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay, ylim=c(0,100))) +
geom_boxplot()
#flights[flights < 0] <- NA
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay, ylim=c(0,100))) +
geom_boxplot()
#flights[flights < 0] <- NA
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay)) +
geom_boxplot()
library(nycflights13)
view(flights)
mean(dep_delay)
mean(data = flights, dep_delay)
#departure delay average vs origin
#flights[flights < 0] <- NA
ggplot(data = flights, mapping = aes(x = origin, y = dep_delay)) +
geom_boxplot() +
ylim(-20,100)
library(tidyverse)
library(nycflights13)
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point() +
coord_quickmap()
install.packages(maps)
library(maps)
install.packages("maps")
library(maps)
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point() +
coord_quickmap()
avg_dest_delays <-
flights %>%
group_by(dest) %>%
# arrival delay NA's are cancelled flights
summarise(delay = mean(arr_delay, na.rm = TRUE)) %>%
inner_join(airports, by = c(dest = "faa"))
avg_dest_delays
avg_dest_delays %>%
ggplot(aes(lon, lat, colour = delay)) +
borders("state") +
geom_point() +
coord_quickmap()
airports
airport_locations <- airports %>%
select(faa, lat, lon)
flights %>%
select(year:day, hour, origin, dest) %>%
left_join(
airport_locations,
by = c("origin" = "faa")
) %>%
left_join(
airport_locations,
by = c("dest" = "faa"),
suffix = c("_origin", "_dest"))
avg_dest_delays %>%
ggplot(aes(lon, lat, size = delay)) +
borders("state") +
geom_point() +
coord_quickmap()
avg_dest_delays %>%
ggplot(aes(lon, lat, color = delay)) +
borders("state") +
geom_point() +
coord_quickmap()
by = c("dest" = "faa"),
flights %>%
select(year:day, hour, origin, dest) %>%
left_join(
airport_locations,
by = c("origin" = "faa")
) %>%
left_join(
airport_locations,
by = c("dest" = "faa"))
avg_dest_delays %>%
ggplot(aes(lon, lat, size = delay)) +
borders("state") +
geom_point() +
coord_quickmap()
avg_dest_delays %>%
ggplot(aes(lon, lat, color = delay)) +
borders("state") +
geom_point() +
coord_quickmap()
avg_dest_delays <-
flights %>%
group_by(dest) %>%
# arrival delay NA's are cancelled flights
summarise(delay = mean(arr_delay, na.rm = TRUE)) %>%
inner_join(airports, by = c(dest = "faa"))
weather
?weather
flights %>%
semi_join(weather)
flights_weather <- flights %>%
semi_join(weather)
flights_weather
flight_weather <-
flights %>%
inner_join(weather, by = c(
"origin" = "origin",
"year" = "year",
"month" = "month",
"day" = "day",
"hour" = "hour"
))
flights_weather
View(flight_weather)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggwordcloud)
cloud_dataframe <- read.csv(file = 'text_data.csv')
tokens <- cloud_dataframe %>% unnest_tokens(lines, Activity, to_lower = TRUE, strip_punct = TRUE)
tokens <- cloud_dataframe %>% unnest_tokens("lines", Activity, to_lower = TRUE, strip_punct = TRUE)
tokens <- cloud_dataframe %>% unnest_tokens(word, Activity, to_lower = TRUE, strip_punct = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(gapminder)
gapminder
view(gapminder)
str(gapminder)
gapminder %>%
ggplot(aes(gdpPercap, lifeExp)) +
geom_line(alpha = 1/3)
library(tidyverse)
gapminder %>%
ggplot(aes(gdpPercap, lifeExp)) +
geom_line(alpha = 1/3)
gapminder %>%
ggplot(aes(gdpPercap, lifeExp))
gapminder %>%
ggplot(aes(gdpPercap, lifeExp)) +
geom_line()
gapminder %>%
ggplot(aes(gdpPercap, lifeExp)) +
geom_line(alpha = 1/3)
gapminder %>%
ggplot(aes(gdpPercap, lifeExp)) +
geom_line() +
ggtitle("Full data = ")
gp_mod <- lm(lifeExp ~ gdpPercap, data = gapminder)
gapminder %>%
add_predictions(gp_mod) %>%
ggplot(aes(gdpPercap, pred)) +
geom_line() +
ggtitle("Linear trend + ")
library(modelr)
gapminder %>%
add_predictions(gp_mod) %>%
ggplot(aes(gdpPercap, pred)) +
geom_line() +
ggtitle("Linear trend + ")
gapminder %>%
add_residuals(gp_mod) %>%
ggplot(aes(gdpPercap, resid)) +
geom_hline(yintercept = 0, colour = "white", size = 3) +
geom_line() +
ggtitle("Remaining pattern")
gapminder %>%
ggplot(aes(gdpPercap, lifeExp, group = country)) +
geom_line(alpha = 1/3)
gapminder %>%
ggplot(aes(gdpPercap, lifeExp)) +
geom_line() +
ggtitle("Full data = ")
gapminder %>%
add_predictions(gp_mod) %>%
ggplot(aes(gdpPercap, pred)) +
geom_line() +
ggtitle("Linear trend + ")
gapminder %>%
add_residuals(gp_mod) %>%
ggplot(aes(gdpPercap, resid)) +
geom_hline(yintercept = 0, colour = "white", size = 3) +
geom_line() +
ggtitle("Remaining pattern")
gapminder %>%
ggplot(aes(gdpPercap, lifeExp, group = country, color = continent)) +
geom_line(alpha = 1/3)
gapminder %>%
add_residuals(gp_mod) %>%
ggplot(aes(gdpPercap, resid)) +
geom_hline(yintercept = 0, colour = "white", size = 3) +
geom_line() +
ggtitle("Remaining pattern")
gapminder %>%
add_predictions(gp_mod) %>%
ggplot(aes(gdpPercap, pred)) +
geom_line() +
ggtitle("Linear trend + ")
by_country <- gapminder %>%
group_by(country, continent) %>%
nest()
by_country <- gapminder %>%
group_by(country, continent) %>%
nest()
country_model <- function(df) {
lm(gdpPercap ~ year, data = df)
}
models <- map(by_country$data, country_model)
by_country <- by_country %>%
mutate(model = map(data, country_model))
by_country %>%
arrange(continent, country)
by_country <- by_country %>%
mutate(
resids = map2(data, model, add_residuals)
)
resids <- unnest(by_country, resids)
resids %>%
ggplot(aes(year, resid, group = country)) +
geom_line(alpha = 1 / 3) +
facet_wrap(~continent)
by_country <- gapminder %>%
group_by(country, continent) %>%
nest()
country_model <- function(df) {
lm(gdpPercap ~ year, data = df)
}
models <- map(by_country$data, country_model)
by_country <- by_country %>%
mutate(model = map(data, country_model))
by_country %>%
arrange(continent, country)
by_country <- by_country %>%
mutate(
resids = map2(data, model, add_residuals)
)
resids <- unnest(by_country, resids)
resids %>%
ggplot(aes(gdpPercap, resid, group = country)) +
geom_line(alpha = 1 / 3) +
facet_wrap(~continent)
by_country <- gapminder %>%
group_by(country, continent) %>%
nest()
country_model <- function(df) {
lm(lifeExp ~ gdpPercap, data = df)
}
models <- map(by_country$data, country_model)
by_country <- by_country %>%
mutate(model = map(data, country_model))
by_country %>%
arrange(continent, country)
by_country <- by_country %>%
mutate(
resids = map2(data, model, add_residuals)
)
resids <- unnest(by_country, resids)
resids %>%
ggplot(aes(gdpPercap, resid, group = country)) +
geom_line(alpha = 1 / 3) +
facet_wrap(~continent)
library(stats)
by_country1 <- gapminder %>%
group_by(country, continent) %>%
nest()
country_model1 <- function(df) {
stats::glm(lifeExp ~ gdpPercap, data = df)
}
models <- map(by_country1$data, country_model1)
by_country1 <- by_country1 %>%
mutate(model = map(data, country_model1))
by_country1 %>%
arrange(continent, country)
by_country1 <- by_country1 %>%
mutate(
resids1 = map2(data, model, add_residuals)
)
resids1 <- unnest(by_country1, resids1)
resids1 %>%
ggplot(aes(gdpPercap, resid, group = country)) +
geom_line(alpha = 1 / 3) +
facet_wrap(~continent)
by_country2 <- gapminder %>%
group_by(country, continent) %>%
nest()
country_model2 <- function(df) {
stats::glm(lifeExp ~ gdpPercap, data = df)
}
models <- map(by_country2$data, country_model2)
by_country2 <- by_country2 %>%
mutate(model = map(data, country_model2))
by_country2 %>%
arrange(continent, country)
by_country2 <- by_country2 %>%
mutate(
resids2 = map2(data, model, add_residuals)
)
resids2 <- unnest(by_country2, resids2)
resids2 %>%
ggplot(aes(gdpPercap, resid, group = country)) +
geom_line(alpha = 1 / 3) +
facet_wrap(~continent)
by_country3 <- gapminder %>%
group_by(country, continent) %>%
nest()
country_model3 <- function(df) {
stats::glm(lifeExp ~ gdpPercap, data = df)
}
models3 <- map(by_country1$data, country_model3)
by_country3 <- by_country3 %>%
mutate(model = map(data, country_model3))
by_country3 %>%
arrange(continent, country)
by_country3 <- by_country3 %>%
mutate(
resids3 = map2(data, model, add_residuals)
)
resids3 <- unnest(by_country3, resids3)
resids3 %>%
ggplot(aes(gdpPercap, resid, group = country)) +
geom_line(alpha = 1 / 3) +
facet_wrap(~continent)
by_country1 <- gapminder %>%
group_by(country, continent) %>%
nest()
country_model1 <- function(df) {
stats::glm(lifeExp ~ gdpPercap, data = df)
}
models1 <- map(by_country1$data, country_model1)
by_country1 <- by_country1 %>%
mutate(model = map(data, country_model1))
by_country1 %>%
arrange(continent, country)
by_country1 <- by_country1 %>%
mutate(
resids1 = map2(data, model, add_residuals)
)
resids1 <- unnest(by_country1, resids1)
resids1 %>%
ggplot(aes(gdpPercap, resid, group = country)) +
geom_line(alpha = 1 / 3) +
facet_wrap(~continent)
by_country2 <- gapminder %>%
group_by(country, continent) %>%
nest()
country_model2 <- function(df) {
MASS::rlm(lifeExp ~ gdpPercap, data = df)
}
models2 <- map(by_country2$data, country_model2)
by_country2 <- by_country2 %>%
mutate(model = map(data, country_model2))
by_country2 %>%
arrange(continent, country)
by_country2 <- by_country2 %>%
mutate(
resids2 = map2(data, model, add_residuals)
)
resids2 <- unnest(by_country2, resids2)
resids2 %>%
ggplot(aes(gdpPercap, resid, group = country)) +
geom_line(alpha = 1 / 3) +
facet_wrap(~continent)
by_country3 <- gapminder %>%
group_by(country, continent) %>%
nest()
country_model3 <- function(df) {
randomForest::randomForest(lifeExp ~ gdpPercap, data = df)
}
models3 <- map(by_country1$data, country_model3)
by_country3 <- by_country3 %>%
mutate(model = map(data, country_model3))
by_country3 %>%
arrange(continent, country)
by_country3 <- by_country3 %>%
mutate(
resids3 = map2(data, model, add_residuals)
)
resids3 <- unnest(by_country3, resids3)
resids3 %>%
ggplot(aes(gdpPercap, resid, group = country)) +
geom_line(alpha = 1 / 3) +
facet_wrap(~continent)
by_country3 <- gapminder %>%
group_by(country, continent) %>%
nest()
country_model3 <- function(df) {
rpart::rpart(lifeExp ~ gdpPercap, data = df)
}
models3 <- map(by_country1$data, country_model3)
by_country3 <- by_country3 %>%
mutate(model = map(data, country_model3))
by_country3 %>%
arrange(continent, country)
by_country3 <- by_country3 %>%
mutate(
resids3 = map2(data, model, add_residuals)
)
resids3 <- unnest(by_country3, resids3)
resids3 %>%
ggplot(aes(gdpPercap, resid, group = country)) +
geom_line(alpha = 1 / 3) +
facet_wrap(~continent)
```{r}
by_country3 <- gapminder %>%
group_by(country, continent) %>%
nest()
country_model3 <- function(df) {
rpart::rpart(lifeExp ~ gdpPercap, data = df)
}
models3 <- map(by_country3$data, country_model3)
by_country3 <- by_country3 %>%
mutate(model = map(data, country_model3))
by_country3 %>%
arrange(continent, country)
by_country3 <- by_country3 %>%
mutate(
resids3 = map2(data, model, add_residuals)
)
resids3 <- unnest(by_country3, resids3)
resids3 %>%
ggplot(aes(gdpPercap, resid, group = country)) +
geom_line(alpha = 1 / 3) +
facet_wrap(~continent)
